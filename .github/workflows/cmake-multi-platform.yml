name: Performance-And-Security (CMake â€¢ multi-platform)

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Configure CMake
      run: >
        cmake -B build
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S .

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Run programs
      shell: bash
      working-directory: build
      run: |
        echo "--- Running stack_smashing ---"
        if [ "$RUNNER_OS" = "Windows" ]; then
          ./Release/stack_smashing.exe AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA || echo "crashed as expected"
        else
          ./stack_smashing AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA || echo "crashed as expected"
        fi

        echo "--- Running stack_smashing_protected ---"
        if [ "$RUNNER_OS" = "Windows" ]; then
          ./Release/stack_smashing_protected.exe AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA || echo "aborted as expected"
        else
          ./stack_smashing_protected AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA || echo "aborted as expected"
        fi

        echo "--- Running security_defenses ---"
        if [ "$RUNNER_OS" = "Windows" ]; then
          ./Release/security_defenses.exe || echo "DEP triggered"
        else
          ./security_defenses || echo "DEP triggered"
        fi

        echo "--- Running overhead_no_prot ---"
        if [ "$RUNNER_OS" = "Windows" ]; then
          ./Release/overhead_no_prot.exe
        else
          ./overhead_no_prot
        fi

        echo "--- Compiling + Running overhead_hardened ---"
        if [ "$RUNNER_OS" = "Windows" ]; then
          g++ -O2 -fstack-protector-all -D_FORTIFY_SOURCE=2 ../src/security_measure_overhead.cpp -o Release/overhead_hardened.exe
          ./Release/overhead_hardened.exe
        else
          g++ -O2 -fstack-protector-all -D_FORTIFY_SOURCE=2 ../src/security_measure_overhead.cpp -o overhead_hardened
          ./overhead_hardened
        fi

        echo "--- Running ROP demo ---"
        if [ "$RUNNER_OS" = "Windows" ]; then
          ./Release/rop.exe
        else
          ./rop
        fi
